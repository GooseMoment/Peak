# https://docs.docker.com/compose/compose-file/

name: peak

services:
  web:
    image: caddy:2.7.6-alpine
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - django_admin_static:/srv/django_static
      - ./web/Caddyfile.prod:/etc/caddy/Caddyfile
      - ./web/:/web/
      - caddy_data:/data
      - caddy_config:/config
      - frontend-dist:/srv/frontend:ro
    env_file:
      - path: ./.env
        required: true
  api:
    build: ./backend
    command: gunicorn django_peak.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - django_admin_static:/static
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - path: ./.env
        required: true
  api_cron:
    build: ./backend
    command: crond -f -l 2
    volumes:
      - ./backend/api.crontab:/etc/crontabs/root
    init: true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.env
  db: 
    image: postgres:16.2-alpine3.19
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - path: ./.env
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"] 
      # https://github.com/peter-evans/docker-compose-healthcheck/issues/16#issuecomment-1039718816
      interval: 1s
      timeout: 5s
      retries: 10
  redis:
    container_name: redis-cache
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 5s
      retries: 10
volumes:
  django_admin_static:
  db_data:
    external: true
  caddy_data:
    external: true
  caddy_config:
  frontend-dist:
    external: true
