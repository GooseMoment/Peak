# Generated by Django 4.2.23 on 2025-08-16 13:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tasks', '0017_remove_task_repeat_delete_repeat'),
        ('social', '0014_remark_remark_constraint_user_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('unicode_emoji', models.CharField(blank=True, max_length=16, null=True)),
                ('image_emoji', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='social.emoji')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='tasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'task_reactions',
            },
        ),
        migrations.AddConstraint(
            model_name='taskreaction',
            constraint=models.UniqueConstraint(condition=models.Q(('image_emoji__isnull', True)), fields=('user', 'task', 'unicode_emoji'), name='social_taskreaction_user_task_unicode_emoji_unique'),
        ),
        migrations.AddConstraint(
            model_name='taskreaction',
            constraint=models.UniqueConstraint(condition=models.Q(('unicode_emoji__isnull', True)), fields=('user', 'task', 'image_emoji'), name='social_taskreaction_user_task_image_emoji_unique'),
        ),
        migrations.AddConstraint(
            model_name='taskreaction',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('image_emoji__isnull', True), ('unicode_emoji__isnull', False)), models.Q(('image_emoji__isnull', False), ('unicode_emoji__isnull', True)), _connector='OR'), name='social_taskreaction_emojis_exclusive'),
        ),
    ]
